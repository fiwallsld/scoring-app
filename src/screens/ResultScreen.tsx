import React, { useState } from "react";
import {
  View,
  Text,
  StyleSheet,
  Button,
  FlatList,
  ScrollView,
  Alert,
} from "react-native";
import { useNavigation, useRoute } from "@react-navigation/native";

interface RouteParams {
  players: string[];
  scores: number[];
  detailedScores: number[][]; // M·∫£ng ƒëi·ªÉm chi ti·∫øt cho t·ª´ng v√°n
}

export default function ResultScreen() {
  const navigation = useNavigation();
  const route = useRoute();
  const { players, scores, detailedScores } = route.params as RouteParams;

  // T·∫°o b·∫£ng x·∫øp h·∫°ng d·ª±a tr√™n ƒëi·ªÉm t·ªïng
  const rankedPlayers = players
    .map((player, index) => ({
      name: player,
      score: scores[index],
      detailedScores: detailedScores[index],
    }))
    .sort((a, b) => b.score - a.score);

  const handleReset = () => {
    // Hi·ªÉn th·ªã alert x√°c nh·∫≠n tr∆∞·ªõc khi reset game
    Alert.alert(
      "X√°c Nh·∫≠n",
      "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën reset tr√≤ ch∆°i?",
      [
        {
          text: "H·ªßy", // N√∫t h·ªßy kh√¥ng l√†m g√¨
          style: "cancel",
        },
        {
          text: "X√°c Nh·∫≠n", // N√∫t x√°c nh·∫≠n s·∫Ω reset game
          onPress: () => {
            navigation.navigate("Home");
          },
        },
      ],
      { cancelable: false } // Kh√¥ng cho ph√©p t·∫Øt alert khi nh·∫•n ngo√†i m√†n h√¨nh
    );
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>üéâ K·∫øt Qu·∫£ Tr√≤ Ch∆°i üéâ</Text>

      {/* Hi·ªÉn th·ªã b·∫£ng x·∫øp h·∫°ng t·ªïng quan */}
      <Text style={styles.subTitle}>X·∫øp H·∫°ng T·ªïng Quan:</Text>
      <View style={styles.resultsContainer}>
        {rankedPlayers.map((item, index) => (
          <Text key={index} style={styles.result}>
            {index + 1}. {item.name}: {item.score} ƒëi·ªÉm{" "}
            {index == 0 ? ": B·∫°n l√† Nh√† V√¥ ƒê·ªãch" : ""}
          </Text>
        ))}
      </View>

      {/* Hi·ªÉn th·ªã ƒëi·ªÉm chi ti·∫øt theo b·∫£ng */}
      <Text style={styles.subTitle}>ƒêi·ªÉm Chi Ti·∫øt:</Text>
      <View style={styles.tableContainer}>
        {/* Header */}
        <View style={styles.tableHeader}>
          <Text style={styles.tableCellEnd}>V√°n</Text>
          {rankedPlayers.map((player) => (
            <Text key={player.name} style={styles.tableCellEnd}>
              {player.name}
            </Text>
          ))}
        </View>
        <ScrollView style={styles.detailsContainer}>
          {/* B·∫£ng ƒëi·ªÉm */}
          {detailedScores[0].map((_, roundIndex) => (
            <View key={roundIndex} style={styles.tableRow}>
              <Text style={styles.tableCell}>V√°n {roundIndex + 1}</Text>
              {rankedPlayers.map((player) => (
                <Text key={player.name} style={styles.tableCell}>
                  {player.detailedScores[roundIndex]}
                </Text>
              ))}
            </View>
          ))}
        </ScrollView>
        {/* Hi·ªÉn th·ªã t·ªïng ƒëi·ªÉm cu·ªëi b·∫£ng */}
        <View style={styles.tableRowEnd}>
          <Text style={[styles.tableCellEnd, styles.totalCell]}>T·ªïng ƒêi·ªÉm</Text>
          {rankedPlayers.map((item, index) => (
            <Text key={index} style={styles.tableCellEnd}>
              {item.score}
            </Text>
          ))}
        </View>
      </View>

      {/* Button quay l·∫°i m√†n h√¨nh ch√≠nh */}
      <Button title="Ch∆°i L·∫°i" onPress={handleReset} />
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 20,
    backgroundColor: "#fff",
  },
  title: {
    fontSize: 24,
    fontWeight: "bold",
    textAlign: "center",
    marginBottom: 10, // Gi·∫£m kho·∫£ng c√°ch gi·ªØa ti√™u ƒë·ªÅ v√† b·∫£ng
    color: "red",
  },
  subTitle: {
    fontSize: 18,
    fontWeight: "bold",
    marginTop: 5,
    marginBottom: 5,
  },
  result: {
    fontSize: 18,
    marginVertical: 5,
  },
  resultsContainer: {
    marginBottom: 10,
  },
  detailsContainer: {
    // flex: 1,
    height: "35%",
    marginBottom: 10,
  },
  tableContainer: {
    marginTop: 10,
    marginBottom: 10,
  },
  tableHeader: {
    flexDirection: "row",
    borderBottomWidth: 2,
    borderBottomColor: "#ddd",
    backgroundColor: "#f0f0f0",
  },
  tableRow: {
    flexDirection: "row",
    borderBottomWidth: 1,
    borderBottomColor: "#ddd",
  },
  tableRowEnd: {
    flexDirection: "row",
    borderBottomWidth: 1,
    borderBottomColor: "#ddd",
    backgroundColor: "#ddd",
  },
  tableCell: {
    padding: 5,
    flex: 1,
    textAlign: "center",
  },

  tableCellEnd: {
    padding: 5,
    flex: 1,
    textAlign: "center",
    color: "red",
  },
  totalCell: {
    fontWeight: "bold",
  },
});
